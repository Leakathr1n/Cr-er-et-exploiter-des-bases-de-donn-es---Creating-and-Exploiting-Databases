/*
 *		TECH220712 -- Gestion des bases de données														
 *		
 *		HEC Montréal, A2022
 *		Travail Pratique 3	
 *		
 *		
 *		Instructions de remise : 
 *			- Répondre aux questions directement dans ce fichier SQL
 *			- Remettre via ZoneCours dans l'outil de Remise de travaux
 *
 *		Instructions supplémentaires 
 *			- Utlisez la base de données AdventureWorks2019 pour répondre aux questions ci-dessous.
 *			- À moins d'avis contraire, on vous demande 1 seule requête qui retourne les résultats demandés par question.
 *
 *		Correction : 
 *			- 12.5% de la note finale, /12.5
 *			- Une question qui génère une erreur (ne s'exécute pas) se verra automatiquement attribuer la note de 0.
 *
 */

 USE AdventureWorks2019
 GO

/*
=> Question 1 (FINI)

	C'est le temps du grand ménage dans l'entrepot d'AdventureWorks. Il y a beaucoup de travail à faire!
	Le directeur des ventes vous demande de lui sortir l'information associée aux produits suivants :
			1. Le nom du produit;
			2. Le nom du modèle du produit (Production.ProductModel) 
			3. La description du produit en français (voir tables Culture)
			4. Le nombre de localisations dans l'entrepot où le produit est entreposé (Production.Location);
			5. La quantité totale de ce produit ayant été commandée par les clients.
	
	Il veut cette information uniquement pour les produits finis, qui peuvent être entreposés dans 2 ou plus localisations dans l'entrepôt. 
	Sachant qu'il y a beaucoup de travail, il vous demande uniquement les 20 produits qui ont étés le plus commandés par les clients
	pour commencer.
	Note : Les mêmes modèles de produit et description de produit peuvent se retrouver sur plusieurs lignes, car certains produits ont des couleurs différentes. 
*/



SELECT TOP 20 -- on veut seulement le top 20
    P.Name AS [Nom du Produit], -- Le nom du produit
    PM.Name AS [Nom du Modèle du Produit], -- nom du modèle du produit
    PD.Description AS [Description du Produit en Français],  -- La description du produit en français
    COUNT(DISTINCT L.LocationID) AS [Nombre d'Emplacements dans l'Entrepôt], -- Le nombre de localisations dans l'entrepot où le produit est entreposé 
    SUM(OD.OrderQty) AS [Quantité Totale Commandée] -- La quantité totale de ce produit ayant été commandée par les clients
FROM Production.Product AS P
INNER JOIN Production.ProductModel AS PM ON P.ProductModelID = PM.ProductModelID -- nom du modèle du produit
INNER JOIN Production.ProductInventory AS IP ON P.ProductID = IP.ProductID -- Le nombre de localisations dans l'entrepot où le produit est entreposé
INNER JOIN Production.Location AS L ON IP.LocationID = L.LocationID -- Le nombre de localisations dans l'entrepot où le produit est entreposé
INNER JOIN Sales.SalesOrderDetail AS OD ON P.ProductID = OD.ProductID -- La quantité totale de ce produit ayant été commandée par les clients
INNER JOIN Sales.SalesOrderHeader AS OH ON OD.SalesOrderID = OH.SalesOrderID -- La quantité totale de ce produit ayant été commandée par les clients
LEFT JOIN Production.ProductModelProductDescriptionCulture AS PMPD ON PM.ProductModelID = PMPD.ProductModelID -- pour le description en francais (ici, il y a le CultureID)
LEFT JOIN Production.ProductDescription AS PD ON PMPD.ProductDescriptionID = PD.ProductDescriptionID -- pour le description
WHERE P.FinishedGoodsFlag = 1 -- produits finis
AND PMPD.CultureID = 'fr' -- description en francais
GROUP BY
    P.Name, PM.Name, PD.Description -- utiliser ce qui j'ai mis dans SELECT sinon le code ne functionne pas 
HAVING COUNT(DISTINCT L.LocationID) >= 2 -- DISTINCT (locations differentes) et les produits finis, qui peuvent être entreposés dans 2 ou plus localisations dans l'entrepôt
ORDER BY [Quantité Totale Commandée] DESC;



/*
=> Question 2 (FINI)

	Vos collègues aimeraient pouvoir comparer la performance des boutiques en 2012.
	Ils s'intéressent à connaître les ventes en dollars (incluant les taxes et les frais de livraison) par boutique. 
	Ils s'intéressent donc seulement aux ventes faites en boutique (en personne).  
	Ils veulent les ventes qui ne sont pas rejetées ou annulées. 

	Le résultat devra avoir les trois colonnes suivantes (nom précis) :
		- StoreID du magasin
		- Nom du magasin
		- Ventes en 2012
	
	Dans la colonne [Ventes en 2012], affichez les montants arrondis à deux décimales prêt et avec un séparateur des milliers.
	Exemple: 418802.4507 s'affichera comme ceci : 418,802.45 ou 418 802.45. Ajoutez un signe de dollars. 
	
	Assurez-vous de bien présenter l'information telle que demandée et de nommer correctement les colonnes.
	On voudra voir les résultats classés par ordre alphabétique de nom de magasin.

*/


SELECT
    S.BusinessEntityID AS StoreID,
    S.Name AS [Nom du magasin],
    FORMAT(SUM(SOH.TotalDue), 'C3') AS [Ventes en 2012] --  modifier en-US
FROM Sales.SalesOrderHeader AS SOH
INNER JOIN Sales.Customer AS C ON SOH.CustomerID = C.CustomerID
INNER JOIN Sales.Store AS S ON c.StoreID = S.BusinessEntityID
WHERE SOH.OrderDate >= '2012-01-01' AND SOH.OrderDate < '2013-01-01'
    AND SOH.OnlineOrderFlag = 0  -- Ventes en personne
    AND SOH.Status NOT IN (4, 6)  -- Exclure les ventes rejetées et annulées
GROUP BY S.BusinessEntityID, S.Name 
ORDER BY [Nom du magasin];



/*
=> Question 3 (FINI)

	De retour au travail lundi matin, votre boss vient pour voir pour une nouvelle demande. Il a entendu dire que
	vous connaissez les données relatives aux produits qui ont été scrapped (donc jetés) et aurait une demande concernant
	ceux-ci. 
	
	Il aimerait avoir la liste des produits (nom des produits) qui ont été rejetés lors de la production avec la raison explicite pour laquelle 
	ceux-ci ont été scrapped et la quantité jetée. Par explicite il sous-entend qu'il ne veut pas d'ID dans la liste car il
	ne peut pas les interpréter. Il veux aussi savoir, par combinaison de produit et raison de rejet, la perte monétaire que 
	la production de ces produits a engendrée, ainsi que le profit potentiel perdu, i.e. qui aurait pu être réalisé si ces produits avaient 
	été faits sans erreur de production et ensuite vendus aux prix listés.

	Pour les colonnes représentant des montants, affichez les montants arrondis à deux décimales prêt et avec un séparateur des milliers.
	Exemple: 418802.4507 s'affichera comme ceci : 418,802.45 ou 418 802.45. Ajoutez un signe de dollars. 

	Il prend la peine de vous mentionner qu'il ne veut que les informations demandées dans le tableau résultant (pas plus, 
	pas moins).

	De plus, il veut uniquement les produits qui ont été manufacturés en 2013 et dont la perte entraînée par les
	coûts de production est de 150$ ou plus.
*/


SELECT
    P.Name AS "Nom du Produit",
    SR.Name AS "Raison du Rejet", -- raison de rejet
    WO.ScrappedQty AS "Quantité Jetée",
    FORMAT(S.StandardCost * WO.ScrappedQty, 'C3') AS "Perte Monétaire", -- perte monétaire
    FORMAT(S.StandardCost * P.ListPrice, 'C3') AS "Profit Potentiel Perdu" -- le profit potentiel perdu
FROM Production.Product AS P
INNER JOIN Production.WorkOrder AS WO ON P.ProductID = WO.ProductID 
INNER JOIN Production.ScrapReason AS SR ON WO.ScrapReasonID = SR.ScrapReasonID
INNER JOIN Production.ProductCostHistory AS S ON P.ProductID = S.ProductID
WHERE
    YEAR(WO.StartDate) = 2013 -- ont été manufacturés en 2013
    AND S.StandardCost * WO.ScrappedQty >= 150  -- coûts de production est de 150$ ou plus
ORDER BY "Nom du Produit", "Raison du Rejet";

/*
=> Question 4(FINI)

	Voter patron aimerait avoir de l'information sur l'effort et les coûts associés à la fabrication des différents produits par bon de travail (Work Order). 
	Il veut la liste des bons de travail avec: 
	- L'identifiant du bon de travail
	- Le nom des produits associés (le même produit peut être fabriqué sur plusieurs bons de travail).
	- La quantité du produit à fabriquer par bon de travail. 
	- le nombre total d'heures de fabrication nécessaires par bon de travail. 
	- le nombre d'étapes nécessaires au processus de fabrication par WO. 
	- le coût total estimé de fabrication par bon de travail. 
	- le coût total réel de fabrication par bon de travail.
	- l'erreur entre l'estimé et le coût réel de fabrication par bon de travail. 
	
	Est-ce que certains bon de travail ont dépassés le coût estimé? 
*/ 

SELECT
    WO.WorkOrderID AS "ID du Bon de Travail", -- L'identifiant du bon de travail
    P.Name AS "Nom du Produit", -- Le nom des produits associés
    WO.OrderQty AS "Quantité à Fabriquer", -- La quantité du produit à fabriquer par bon de travail
    WR.ActualResourceHrs AS "Heures de Fabrication Réelles", -- le nombre total d'heures de fabrication nécessaires par bon de travail
	WR.OperationSequence AS "Nombre d'Étapes",  -- le nombre d'étapes nécessaires au processus de fabrication par WO
    FORMAT(WR.PlannedCost, 'C3') AS "Coût Estimé de Fabrication", --  le coût total estimé de fabrication par bon de travail
    FORMAT(WR.ActualCost, 'C3') AS "Coût Réel de Fabrication", -- le coût total réel de fabrication par bon de travail
    FORMAT(WR.ActualCost - WR.PlannedCost, 'C3') AS "Erreur Estimé vs Réel" -- l'erreur entre l'estimé et le coût réel de fabrication par bon de travail
FROM Production.WorkOrder AS WO
INNER JOIN Production.Product AS P ON WO.ProductID = P.ProductID
INNER JOIN Production.WorkOrderRouting AS WR ON WO.WorkOrderID = WR.WorkOrderID;

-- Est-ce que certains bon de travail ont dépassés le coût estimé? 
-- Pour repondre à cette question, on peut modifier le code et ajouter une clause WHERE WR.ActualCost > WR.PlannedCost. 
-- Si la table est vide, il n'y a pas de bon de travail qui ont dépassé le cout estimé. 
-- La table est vide, donc la réponse est 'Non'. 

SELECT
    WO.WorkOrderID AS "ID du Bon de Travail",
    P.Name AS "Nom du Produit",
    WO.OrderQty AS "Quantité à Fabriquer",
    WR.ActualResourceHrs AS "Heures de Fabrication Réelles",
	WR.OperationSequence AS "Nombre d'Étapes", 
    FORMAT(WR.PlannedCost, 'C3') AS "Coût Estimé de Fabrication", 
    FORMAT(WR.ActualCost, 'C3') AS "Coût Réel de Fabrication", 
    FORMAT(WR.ActualCost - WR.PlannedCost, 'C3') AS "Erreur Estimé vs Réel" 
FROM Production.WorkOrder AS WO
INNER JOIN Production.Product AS P ON WO.ProductID = P.ProductID
INNER JOIN Production.WorkOrderRouting AS WR ON WO.WorkOrderID = WR.WorkOrderID
WHERE WR.ActualCost > WR.PlannedCost;


/*
=> Question 5 (FINI)
	
	Le PDG d'AdventureWorks vient vous voir et vous mentionne qu'il serait intéressé à en savoir plus sur les ventes faites 
	sur le territoire nord américain.
	
	Il vous demande de lui produire un rapport qui présente la somme des ventes par pays nord américain, par catégorie de produit ET par sous-catégorie de produit.
	De plus, il veut que les montants d'argent soient affichés avec 2 chiffres après la virgule suivi d'un '$' (ex. 10.00$).
	Finalement, il aimerait que les données du rapport soient classées en ordre décroissant du total des ventes.
	
	Rappels : 
	- Ajouter des noms descriptifs aux colonnes de votre rapport, vous allez le présenter à votre PDG !
	- On veut les noms COMPLETS (pas les codes) des pays nords américains et pas le nom des territoires.
	- L'absence d'une sous-catégorie "officielle" sera considérée comme une sous-catégorie elle-même.
	- Divisez la question du format monétaire en deux parties, soit la partie des chiffres (1.00) et la partie pour ajouter
		un signe de dollar ($).
	- AdventureWorks enregistre ses ventes en dollars américains, peu importe le pays de la vente, il n'est pas pas nécessaire de faire des 
		conversions monétaires.
	- Assurez-vous de choisir la bonne colonne pour calculer la somme des ventes compte tenu des jointures faites, sinon les résultats
		seront faux !

*/


SELECT
    CO.Name AS "Pays Nord-Américain",
    PC.Name AS "Catégorie de Produit",
    ISNULL(PSC.Name, 'Aucune Sous-Catégorie') AS "Sous-Catégorie de Produit", -- - L'absence d'une sous-catégorie "officielle" sera considérée comme une sous-catégorie elle-même.
	FORMAT(SUM(SOH.TotalDue), '0.00') + ' $' AS "Total des Ventes ($)" --  Divisez la question du format monétaire en deux parties, soit la partie des chiffres (1.00) et la partie pour ajouter un signe de dollar ($).
FROM Sales.SalesOrderHeader AS SOH
INNER JOIN Sales.Customer C ON SOH.CustomerID = C.CustomerID -- chaque commande de vente connecté avec le client correspondant.
INNER JOIN Person.Person P ON C.PersonID = P.BusinessEntityID
INNER JOIN Person.BusinessEntityAddress BEA ON P.BusinessEntityID = BEA.BusinessEntityID -- trouver l'adresse
INNER JOIN Person.Address A ON BEA.AddressID = A.AddressID
INNER JOIN Person.StateProvince SP ON A.StateProvinceID = SP.StateProvinceID
INNER JOIN Person.CountryRegion CO ON SP.CountryRegionCode = CO.CountryRegionCode
INNER JOIN Sales.SalesOrderDetail SOD ON SOH.SalesOrderID = SOD.SalesOrderID -- trouver des produits et des sous-produits
INNER JOIN Production.Product PP ON SOD.ProductID = PP.ProductID
INNER JOIN Production.ProductSubcategory PSC ON PP.ProductSubcategoryID = PSC.ProductSubcategoryID
INNER JOIN Production.ProductCategory PC ON PSC.ProductCategoryID = PC.ProductCategoryID
WHERE CO.CountryRegionCode IN ('CA', 'US', 'MX') -- North American countries
GROUP BY CO.Name, PC.Name, PSC.Name
ORDER BY SUM(SOH.TotalDue) DESC; -- ordre décroissant du total des ventes



/*
=> Question 6 (FINI)

	Votre nouvel ami pour la vie, le PDG d'AdventureWorks vient vous voir à nouveau. Il vous mentionne à quel point il 
	ne croit pas qu'AdventureWorks vend des produits à rabais. Vous voulez lui prouver le contraire, à savoir, qu'il y a
	plein de produits vendus à rabais. Vous devez donc écrire une requête pour appuyer votre point de vue. Les résultats
	doivent prendre la forme suivante :
	
		- le type de rabais
		- la description du rabais lui-même
		- le groupe à qui le rabais est appliqué (Client ou Revendeur) 
		- la quantité de produits vendus, par type de rabais; étiqueté comme 'Quantité de produits vendus à rabais'
		- le montant des produits vendus, par type de rabais; étiqueté comme 'Montant des produits vendus à rabais'. Les montants d'argent doivent être affichés avec 2 chiffres après la virgule suivi d'un '$' (ex. 10.00$).
	
	Trier les résultats par ordre croissant de type et de de description de rabais.
*/



SELECT
    D.Type AS "Type de Rabais", -- le type de rabais
    D.Description AS "Description du Rabais", -- la description du rabais lui-même
    D.Category AS "Groupe du Rabais", --- le groupe à qui le rabais est appliqué (Client ou Revendeur)
    SUM(SOD.OrderQty) AS "Quantité de Produits Vendus à Rabais", -- la quantité de produits vendus, par type de rabais
    FORMAT(SUM(SOD.OrderQty * SOD.UnitPrice * (D.DiscountPct / 100.0)), 'C2') AS "Montant des Produits Vendus à Rabais" -- le montant des produits vendus, par type de rabais;
FROM
    Sales.SpecialOffer AS D
INNER JOIN Sales.SalesOrderDetail SOD ON D.SpecialOfferID = SOD.SpecialOfferID
GROUP BY D.Type, D.Description, D.Category
ORDER BY D.Type ASC, D.Description ASC;
