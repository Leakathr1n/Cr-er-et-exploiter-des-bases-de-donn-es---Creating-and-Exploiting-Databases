/*
	Fichier créé par Edouard Labbé

	HEC Montréal, Gestion des bases de données
	Séance 2, Exercices 4.21 à 4.26
*/
/*******************************************************************/
USE AdventureWorks2019;
GO


--Exercice 4.21 Sélectionner le montant moyen de toutes les ventes d’AdventuresWorks

SELECT AVG(TotalDue)
FROM Sales.SalesOrderHeader

--Exercice 4.22 Sélectionner le nombre de ventes d’AdventuresWorks

SELECT COUNT(*)
FROM Sales.SalesOrderHeader

--Exercice 4.23 Sélectionner la plus petite vente d’AdventuresWorks

SELECT MIN(TotalDue)
FROM Sales.SalesOrderHeader

--Exercice 4.24 Sélectionner la plus grande vente d’AdventuresWorks

SELECT MAX(TotalDue)
FROM Sales.SalesOrderHeader

--Exercice 4.25 Les mêmes requêtes mais regroupées selon le territoire

--AVERAGE
SELECT 
	  TerritoryID
	, AVG(TotalDue)
FROM Sales.SalesOrderHeader
GROUP BY TerritoryID

--COUNT
SELECT 
	  TerritoryID
	, COUNT(*)
FROM Sales.SalesOrderHeader
GROUP BY TerritoryID

--MIN
SELECT 
	  TerritoryID
	, MIN(TotalDue)
FROM Sales.SalesOrderHeader
GROUP BY TerritoryID

--MAX
SELECT 
	  TerritoryID
	, MAX(TotalDue)
FROM Sales.SalesOrderHeader
GROUP BY TerritoryID


--Exercice 4.26 Les mêmes informations, en une seule reqête, avec regroupement selon le territoire  et le vendeur qui a créé la vente (simplement les ID)
--Le tout trié par # de territoire ascendant et # de vendeur descendant.

SELECT 
	  TerritoryID
	, SalesPersonID
	, AVG(TotalDue) AS 'Average'
	, COUNT(*)		AS 'Count'
	, MIN(TotalDue)	AS 'Min'
	, MAX(TotalDue)	AS 'Max'
FROM Sales.SalesOrderHeader
GROUP BY TerritoryID, SalesPersonID
ORDER BY TerritoryID ASC, SalesPersonID DESC







